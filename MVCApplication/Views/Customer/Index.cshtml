@using System.Globalization
@*
  Drinks Menu – Frontend only (no server logic)
*@
@{
    Layout = "_CustomerLayout";
}

<style>
    /* ===== Drinks Menu WOW – dark default; light via :root[data-theme="light"] ===== */
    /* fallback biến nếu layout chưa khai báo */
    :root {
        --bg: #0b1020;
        --bg-soft: #0f172a;
        --text: #e5e7eb;
        --muted: #9aa3b2;
        --border: rgba(255,255,255,.12);
        --accent: #22d3ee;
        --accent2: #3b82f6;
    }

        :root[data-theme="light"] {
            --bg: #f5f7fb;
            --bg-soft: #ffffff;
            --text: #0f172a;
            --muted: #5b6577;
            --border: rgba(0,0,0,.08);
            --accent: #0ea5e9;
            --accent2: #3b82f6;
        }

    .drink-page {
        max-width: 1200px;
        margin: 24px auto;
        padding: 0 16px;
        color: var(--text);
    }

    .drink-header {
        display: flex;
        align-items: flex-end;
        gap: 12px;
        margin-bottom: 18px;
    }

        .drink-header h2 {
            margin: 0;
            font-weight: 800;
            letter-spacing: .2px;
            line-height: 1.1
        }

        .drink-header .under {
            flex: 1;
            min-width: 160px;
            height: 6px;
            border-radius: 999px;
            background: linear-gradient(90deg,var(--accent),var(--accent2));
            filter: saturate(1.05) brightness(1.05);
            box-shadow: 0 0 22px color-mix(in oklab,var(--accent) 45%, transparent);
        }

    /* Controls */
    .drink-controls {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: 12px;
        margin-bottom: 14px;
    }

    .drink-search {
        display: flex;
        gap: 8px;
        align-items: center;
        background: var(--bg-soft);
        border: 1px solid var(--border);
        border-radius: 14px;
        padding: 10px 12px;
    }

        .drink-search input {
            flex: 1;
            background: transparent;
            border: 0;
            outline: 0;
            color: var(--text);
            font-size: 15px;
        }

    .drink-chips {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
        justify-content: flex-end;
    }

    .drink-chip {
        border-radius: 999px;
        padding: 8px 12px;
        font-weight: 700;
        font-size: 13.5px;
        cursor: pointer;
        border: 1px solid var(--border);
        background: linear-gradient(180deg, color-mix(in oklab,#fff 7%, transparent), transparent);
        transition: transform .1s ease, box-shadow .25s ease, background .2s ease;
    }

        .drink-chip:hover {
            transform: translateY(-1px)
        }

        .drink-chip.active {
            background: linear-gradient(135deg,var(--accent),var(--accent2));
            color: #0b1220;
            border-color: transparent;
            box-shadow: 0 8px 18px color-mix(in oklab,#000 30%, transparent);
        }

    /* Grid */
    .drink-grid {
        display: grid;
        gap: 16px;
        grid-template-columns: repeat(12, 1fr);
    }

    .drink-card {
        grid-column: span 3; /* 4/row desktop */
        position: relative;
        isolation: isolate;
        overflow: hidden;
        background: color-mix(in oklab,var(--bg-soft) 92%, transparent);
        border: 1px solid var(--border);
        border-radius: 18px;
        box-shadow: 0 10px 28px rgba(2,8,23,.45), 0 1px 0 color-mix(in oklab,#fff 6%, transparent) inset;
        transition: transform .18s ease, box-shadow .25s ease, outline-color .25s ease;
    }

        .drink-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 14px 34px rgba(2,8,23,.55)
        }

        .drink-card::before {
            content: "";
            position: absolute;
            inset: -1px;
            z-index: -1;
            border-radius: inherit;
            background: conic-gradient(from 180deg, color-mix(in oklab,var(--accent) 40%, transparent), color-mix(in oklab,var(--accent2) 40%, transparent), transparent 35%);
            filter: blur(12px) saturate(1.2);
            opacity: .38;
            animation: drinkRing 14s linear infinite;
        }
    @@keyframes drinkRing {
        to

    {
        transform: rotate(1turn)
    }

    }

    .drink-cover {
        aspect-ratio: 1/1;
        width: 100%;
        object-fit: cover;
        display: block;
        filter: saturate(1.05) contrast(1.02);
    }

    .drink-info {
        padding: 12px 12px 14px;
        display: grid;
        gap: 8px
    }

    .drink-title {
        font-weight: 800;
        line-height: 1.2;
        display: flex;
        justify-content: space-between;
        gap: 10px;
    }

    .drink-price {
        font-weight: 800;
        font-variant-numeric: tabular-nums;
        background: linear-gradient(135deg,var(--accent),var(--accent2));
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    .drink-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 8px;
        color: var(--muted);
        font-size: 13.5px;
    }

    .drink-tag {
        padding: 6px 10px;
        border-radius: 999px;
        border: 1px solid var(--border);
        background: linear-gradient(180deg, color-mix(in oklab,#fff 7%, transparent), transparent);
        font-weight: 700;
        font-size: 12.5px;
        white-space: nowrap;
    }

    /* Button riêng (tránh đụng layout .btn) */
    .drink-btn {
        appearance: none;
        border: 0;
        cursor: pointer;
        border-radius: 12px;
        padding: 10px 12px;
        font-weight: 800;
        font-size: 13.5px;
        color: #0b1220;
        background: linear-gradient(135deg,var(--accent),var(--accent2));
        box-shadow: 0 8px 18px color-mix(in oklab,#000 30%, transparent);
        transition: transform .12s ease, filter .2s ease;
    }

        .drink-btn:hover {
            transform: translateY(-1px);
            filter: brightness(1.05)
        }

    /* Light tweaks */
    :root[data-theme="light"] .drink-search {
        background: #fff
    }

    :root[data-theme="light"] .drink-card {
        background: #fff;
        box-shadow: 0 10px 24px rgba(2,8,23,.12)
    }

    :root[data-theme="light"] .drink-chip {
        background: linear-gradient(180deg,#fff,#f7f8fb)
    }

    /* Responsive */
    @@media (max-width: 1100px) {
        .drink-card

    {
        grid-column: span 4
    }

    } /* 3/row */
   @@media (max-width: 800px) {
        .drink-controls

    {
        grid-template-columns: 1fr
    }

    .drink-chips {
        justify-content: flex-start
    }

    }
    @@media (max-width: 700px) {
        .drink-card

    {
        grid-column: span 6
    }

    } /* 2/row */
    @@media (max-width: 420px) {
        .drink-card

    {
        grid-column: span 12
    }

    } /* 1/row */
</style>

<div class="drink-page">
    <div class="drink-header">
        <h2>Menu đồ uống</h2>
        <div class="under"></div>
    </div>
    <!-- Controls -->
    <div class="drink-controls">
        <div class="drink-search">
            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.8" style="color:var(--muted)">
                <circle cx="11" cy="11" r="7"></circle>
                <path d="M21 21l-4.3-4.3"></path>
            </svg>
            <input id="drinkSearch" placeholder="Tìm đồ uống theo tên..." />
        </div>
        <div class="drink-chips" id="drinkChips">
            <button type="button" class="drink-chip active" data-filter="all">Tất cả</button>
            <button type="button" class="drink-chip" data-filter="coffee">Coffee</button>
            <button type="button" class="drink-chip" data-filter="tea">Tea</button>
            <button type="button" class="drink-chip" data-filter="milktea">Milk Tea</button>
            <button type="button" class="drink-chip" data-filter="smoothie">Smoothie</button>
            <button type="button" class="drink-chip" data-filter="soda">Soda</button>
            <button type="button" class="drink-chip" data-filter="juice">Juice</button>
        </div>
    </div>
    <!-- Grid items – Dữ liệu động từ model -->
    <div class="drink-grid" id="drinkGrid">
        @foreach (var item in Model)
        {
            <div class="drink-card" data-cat="@(item.CategoryName?.ToLower() ?? "")" data-name="@(item.ProductName.ToLower())">
                <img class="drink-cover" src="@item.ImageUrl" alt="@item.ProductName">
                <div class="drink-info">
                    <div class="drink-title"><span>@item.ProductName</span><span class="drink-price">@item.Price.ToString("C", new CultureInfo("vi-VN"))</span></div>
                    <div class="drink-meta"><span class="drink-tag">@(item.CategoryName ?? "Không xác định")</span><button class="drink-btn" type="button" data-id="@item.ProductId">Chọn</button></div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        (() => {
          const chips  = document.getElementById('drinkChips');
          const grid   = document.getElementById('drinkGrid');
          const search = document.getElementById('drinkSearch');
          const CURRENT_USER_ID = @(Context.Session.GetInt32("UserId") ?? 0);

          function applyFilter() {
            const active = chips.querySelector('.drink-chip.active');
            const cat = active ? active.dataset.filter : 'all';
            const q = (search.value || '').trim().toLowerCase();

            for (const card of grid.children) {
              const matchCat  = (cat === 'all') || card.dataset.cat === cat;
              const matchText = card.dataset.name.toLowerCase().includes(q);
              card.style.display = (matchCat && matchText) ? '' : 'none';
            }
          }

          chips.addEventListener('click', (e) => {
            const btn = e.target.closest('.drink-chip'); if (!btn) return;
            chips.querySelectorAll('.drink-chip').forEach(c => c.classList.remove('active'));
            btn.classList.add('active');
            applyFilter();
          });

          search.addEventListener('input', applyFilter);

          // --- Thêm vào giỏ ---
          grid.addEventListener('click', async (e) => {
            const btn = e.target.closest('.drink-btn');
            if (!btn) return;

            if (!CURRENT_USER_ID) {
              window.location.href = '/Accounts/Login';
              return;
            }

            const card = btn.closest('.drink-card');
            const pid = parseInt(btn.dataset.id, 10);
            if (!pid) { alert('❌ Không xác định được sản phẩm'); return; }

            try {
              const res = await fetch('/api/cart/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId: CURRENT_USER_ID, productId: pid, quantity: 1 })
              });

              if (res.status === 401) { window.location.href = '/Accounts/Login'; return; }

              const data = await res.json().catch(() => ({ message: 'Lỗi không xác định' }));
              if (res.ok) {
                alert('✅ ' + (data.message || 'Đã thêm/cộng dồn sản phẩm vào giỏ!'));
                if (window.updateCartBadge) window.updateCartBadge(); // 🔹 cập nhật badge ngay
              } else {
                alert('❌ ' + (data.message || 'Không thể thêm sản phẩm'));
              }
            } catch (err) {
              console.error(err);
              alert('⚠️ Không thể kết nối server!');
            }
          });

          applyFilter();
        })();
    </script>
}

