@model IEnumerable<MVCApplication.DTOs.OrderDto>

@{
    ViewData["Title"] = "Danh sách đơn hàng";
    Layout = "_CustomerLayout";

    // Helper function để lấy class màu dựa trên trạng thái (sử dụng trạng thái DB - tiếng Anh)
    string GetStatusClass(string status)
    {
        // Chuyển về chữ thường để so sánh không phân biệt hoa/thường
        status = status.ToLower();

        // Cập nhật logic với trạng thái tiếng Anh của DB (completed, paid, cancelled, pending, v.v.)
        if (status.Contains("completed") || status.Contains("paid")) return "status-ok";
        if (status.Contains("delivering") || status.Contains("confirmed") || status.Contains("shipped")) return "status-accent";
        if (status.Contains("pending") || status.Contains("unpaid")) return "status-muted";
        if (status.Contains("cancelled")) return "status-danger";
        return "status-muted";
    }

    // Helper function để dịch trạng thái (status: tiếng Anh) sang tiếng Việt
    string TranslateStatus(string status)
    {
        switch (status.ToLower())
        {
            case "pending":
                return "Đang chờ xử lý";
            case "confirmed":
                return "Đã xác nhận";
            case "shipped":
            case "delivering":
                return "Đang giao hàng";
            case "completed":
                return "Hoàn thành";
            case "cancelled":
                return "Đã hủy";
            case "paid":
                return "Đã thanh toán";
            case "unpaid":
                return "Chưa thanh toán";
            default:
                return status; // Giữ nguyên nếu không tìm thấy
        }
    }
}

<style>
    /* ============================================== */
    /* ============== UI Variables & Themes ========= */
    /* ============================================== */
    :root {
        --bg: #0b1020;
        --bg-soft: #0f172a;
        --text: #e5e7eb;
        --muted: #9aa3b2;
        --border: rgba(255,255,255,.12);
        --accent: #22d3ee;
        --accent2: #3b82f6;
        --danger: #ef4444;
        --ok: #22c55e;
        --duration: 0.3s;
    }

        :root[data-theme="light"] {
            --bg: #f5f7fb;
            --bg-soft: #ffffff;
            --text: #0f172a;
            --muted: #5b6577;
            --border: rgba(0,0,0,.08);
            --accent: #0ea5e9;
            --accent2: #3b82f6;
            --danger: #dc2626;
            --ok: #16a34a;
        }

    /* ============================================== */
    /* ============ Animations & Keyframes ========== */
    /* ============================================== */
    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(-20px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @@keyframes orderCardRing {
        to {
            transform: rotate(1turn)
        }
    }


    /* ============================================== */
    /* ============ Layout & Card Styles ============ */
    /* ============================================== */
    .order-page {
        max-width: 1100px;
        margin: 24px auto;
        padding: 0 16px;
        color: var(--text);
    }

    .order-title {
        display: flex;
        align-items: flex-end;
        gap: 12px;
        margin: 0 0 24px;
        animation: fadeIn var(--duration) ease-out both;
    }

        .order-title h2 {
            margin: 0;
            font-weight: 800;
            letter-spacing: .2px;
            line-height: 1.1;
            font-size: 28px;
        }

        .order-title .under {
            flex: 1;
            min-width: 100px;
            height: 6px;
            border-radius: 999px;
            background: linear-gradient(90deg,var(--accent),var(--accent2));
            filter: saturate(1.05) brightness(1.05);
            box-shadow: 0 0 22px color-mix(in oklab,var(--accent) 45%, transparent);
        }

    /* Order Card (Áp dụng Neon Ring) */
    .order-card {
        position: relative;
        isolation: isolate;
        overflow: hidden;
        background: color-mix(in oklab,var(--bg-soft) 92%, transparent);
        border: 1px solid var(--border);
        border-radius: 18px;
        box-shadow: 0 12px 32px rgba(2,8,23,.5), 0 1px 0 color-mix(in oklab,#fff 6%, transparent) inset;
        padding: 0;
        margin-bottom: 24px;
        animation: fadeIn var(--duration) ease-out var(--duration) both;
    }

        /* Vòng xoay neon (dùng ::before) */
        .order-card::before {
            content: "";
            position: absolute;
            inset: -1px;
            border-radius: inherit;
            z-index: -1;
            background: conic-gradient(from 180deg, color-mix(in oklab,var(--accent) 40%, transparent), color-mix(in oklab,var(--accent2) 40%, transparent), transparent 35%);
            filter: blur(12px) saturate(1.2);
            opacity: .38;
            animation: orderCardRing 14s linear infinite;
            transition: opacity var(--duration) ease, filter var(--duration) ease;
        }

        /* Nội dung nổi lên trên overlays */
        .order-card > * {
            position: relative;
            z-index: 1;
        }

    /* Light Mode Adjustments */
    :root[data-theme="light"] .order-card::before {
        opacity: .10;
        filter: blur(3px) saturate(1);
    }

    :root[data-theme="light"] .order-card {
        background: #fff;
        box-shadow: 0 12px 28px rgba(2,8,23,.12);
        transition: background var(--duration) ease, box-shadow var(--duration) ease;
    }


    /* ============================================== */
    /* ================ Table Styles ================ */
    /* ============================================== */
    .orders-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        text-align: left;
        font-size: 14px;
    }

        .orders-table th {
            padding: 12px;
            color: var(--muted);
            font-weight: 700;
            border-bottom: 2px solid var(--border);
            background: var(--bg-soft);
            transition: border-color var(--duration) ease, background-color var(--duration) ease;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .orders-table td {
            padding: 12px;
            border-bottom: 1px dashed var(--border);
            vertical-align: middle;
            color: var(--text);
            transition: color var(--duration) ease, border-color var(--duration) ease;
        }

        .orders-table tbody tr:last-child td {
            border-bottom: none;
        }

        .orders-table tbody tr {
            transition: background-color var(--duration) ease;
            animation: slideIn 0.4s ease-out both;
        }

            /* Staggering animation */
            .orders-table tbody tr:nth-child(2) {
                animation-delay: 0.3s;
            }

            .orders-table tbody tr:nth-child(3) {
                animation-delay: 0.35s;
            }

            .orders-table tbody tr:nth-child(4) {
                animation-delay: 0.4s;
            }

            .orders-table tbody tr:nth-child(5) {
                animation-delay: 0.45s;
            }

            .orders-table tbody tr:hover {
                background: linear-gradient(90deg, color-mix(in oklab,var(--accent) 5%, transparent), transparent 50%);
            }

    :root[data-theme="light"] .orders-table tbody tr:hover {
        background: linear-gradient(90deg, color-mix(in oklab,var(--accent) 12%, transparent), transparent 50%);
    }

    .order-id-cell {
        font-weight: 700;
        color: var(--accent);
    }

    .total-amount-cell {
        font-weight: 800;
        font-variant-numeric: tabular-nums;
        text-align: right;
        min-width: 100px;
        background: linear-gradient(135deg,var(--accent),var(--accent2));
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
    }

    .date-cell {
        color: var(--muted);
        font-size: 13px;
        min-width: 130px;
    }


    /* ============ STATUS PILLS ============ */
    .status-pill {
        display: inline-block;
        padding: 4px 10px;
        border-radius: 999px;
        font-weight: 700;
        font-size: 13px;
        text-transform: uppercase;
        white-space: nowrap;
        transition: background-color var(--duration) ease, color var(--duration) ease;
    }

    .status-ok {
        background: color-mix(in oklab, var(--ok) 15%, transparent);
        color: var(--ok);
    }

    .status-accent {
        background: color-mix(in oklab, var(--accent) 15%, transparent);
        color: var(--accent);
    }

    .status-danger {
        background: color-mix(in oklab, var(--danger) 15%, transparent);
        color: var(--danger);
    }

    .status-muted {
        background: color-mix(in oklab, var(--muted) 15%, transparent);
        color: var(--muted);
    }


    /* ============ ACTION BUTTONS STYLES ============ */
    .action-buttons {
        display: flex;
        gap: 8px;
        min-width: 120px;
    }

        .action-buttons a, .action-buttons button {
            padding: 6px 10px;
            border-radius: 8px;
            font-size: 13px;
            text-decoration: none;
            font-weight: 600;
            transition: transform .12s ease, box-shadow .2s ease;
            cursor: pointer;
            border: none;
        }

    .btn-view {
        background: var(--accent);
        color: var(--bg);
    }

        .btn-view:hover {
            background: color-mix(in oklab, var(--accent) 90%, #fff);
            transform: translateY(-2px) scale(1.02);
            box-shadow: 0 4px 8px color-mix(in oklab, var(--accent2) 50%, transparent);
        }

    .btn-cancel {
        background: var(--danger);
        color: #fff;
    }

        .btn-cancel:hover {
            background: color-mix(in oklab, var(--danger) 90%, #fff);
            transform: translateY(-2px) scale(1.02);
            box-shadow: 0 4px 8px color-mix(in oklab, var(--danger) 50%, transparent);
        }


    /* ============ PAGINATION STYLES ============ */
    .pagination {
        display: flex;
        justify-content: flex-end;
        list-style: none;
        padding: 0;
        margin-top: 20px;
        animation: fadeIn var(--duration) ease-out 0.6s both;
    }

    .page-item a {
        display: block;
        padding: 8px 14px;
        margin-left: -1px;
        line-height: 1.25;
        color: var(--text);
        background-color: var(--bg-soft);
        border: 1px solid var(--border);
        text-decoration: none;
        transition: background-color var(--duration) ease, color var(--duration) ease, border-color var(--duration) ease;
    }

    .page-item:first-child a {
        border-top-left-radius: 8px;
        border-bottom-left-radius: 8px;
    }

    .page-item:last-child a {
        border-top-right-radius: 8px;
        border-bottom-right-radius: 8px;
    }

    .page-item.active a {
        color: var(--bg);
        background-color: var(--accent);
        border-color: var(--accent);
        z-index: 2;
    }

    .page-item a:hover {
        background-color: color-mix(in oklab, var(--accent) 15%, var(--bg-soft));
    }

    .page-item.disabled a {
        color: var(--muted);
        pointer-events: none;
        opacity: 0.6;
    }

    /* ============================================== */
    /* ================ Modal/Popup Styles ================ */
    /* ============================================== */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.3s ease;
    }

        .modal-overlay.active {
            opacity: 1;
            pointer-events: auto;
        }

    .modal-content {
        background: var(--bg-soft);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 25px;
        width: 90%;
        max-width: 400px;
        transform: scale(0.9);
        transition: transform 0.3s ease;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        color: var(--text);
    }

    .modal-overlay.active .modal-content {
        transform: scale(1);
    }

    .modal-content h4 {
        margin-top: 0;
        margin-bottom: 15px;
        font-size: 1.5em;
        color: var(--danger);
        text-shadow: 0 0 5px color-mix(in oklab, var(--danger) 50%, transparent);
    }

    .modal-content textarea {
        width: 100%;
        min-height: 100px;
        padding: 10px;
        margin-bottom: 15px;
        border-radius: 8px;
        border: 1px solid var(--border);
        background: var(--bg);
        color: var(--text);
        resize: vertical;
        box-sizing: border-box;
        transition: border-color var(--duration) ease, box-shadow var(--duration) ease;
    }

        .modal-content textarea:focus {
            outline: none;
            border-color: var(--danger);
            box-shadow: 0 0 8px color-mix(in oklab, var(--danger) 40%, transparent);
        }

    .modal-actions {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }

    .btn-modal-cancel {
        background: var(--muted);
        color: var(--bg);
        padding: 8px 15px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 700;
        transition: background 0.2s ease;
    }

        .btn-modal-cancel:hover {
            background: color-mix(in oklab, var(--muted) 80%, transparent);
        }

    .btn-modal-confirm {
        background: var(--danger);
        color: #fff;
        padding: 8px 15px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 700;
        transition: transform 0.12s ease, box-shadow 0.2s ease;
    }

        .btn-modal-confirm:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px color-mix(in oklab, var(--danger) 50%, transparent);
        }

</style>

<div class="order-page">
    <div class="order-title">
        <h2>@ViewData["Title"]</h2>
        <div class="under"></div>
    </div>

    <div class="order-card">
        <div style="overflow-x: auto;">
            <table class="orders-table">
                <thead>
                    <tr>
                        <th>Mã ĐH</th>
                        <th>Người đặt</th>
                        <th>Trạng thái</th>
                        <th>Thanh toán</th>
                        <th class="total-amount-cell" style="text-align: right;">Tổng tiền</th>
                        <th class="date-cell">Ngày đặt</th>
                        <th style="min-width: 130px;">Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td class="order-id-cell">#@order.OrderId</td>
                                <td>@order.FullName</td>

                                @* HIỂN THỊ TRẠNG THÁI ĐƠN HÀNG (Dịch sang tiếng Việt) *@
                                <td>
                                    <span class="status-pill @GetStatusClass(order.OrderStatus)">
                                        @TranslateStatus(order.OrderStatus)
                                    </span>
                                </td>

                                @* HIỂN THỊ TRẠNG THÁI THANH TOÁN (Dịch sang tiếng Việt) *@
                                <td>
                                    <span class="status-pill @GetStatusClass(order.PaymentStatus)">
                                        @TranslateStatus(order.PaymentStatus)
                                    </span>
                                </td>

                                <td class="total-amount-cell">@order.TotalAmount.ToString("N0")₫</td>
                                <td class="date-cell">@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    <div class="action-buttons">
                                        <a class="btn-view" href="@Url.Action("Details", "Orders", new { id = order.OrderId })">Xem</a>

                                        @* ẨN NÚT HỦY KHI TRẠNG THÁI LÀ "cancelled" HOẶC "completed" *@
                                        @if (order.OrderStatus.ToLower() != "cancelled" && order.OrderStatus.ToLower() != "completed")
                                        {
                                            <button type="button"
                                                    class="btn-cancel btn-open-modal"
                                                    data-order-id="@order.OrderId">
                                                Hủy
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" style="text-align: center; padding: 30px; color: var(--muted); border-bottom: none;">
                                Bạn chưa có đơn hàng nào.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (ViewBag.TotalPages > 1)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage - 1 })" tabindex="-1">Trước</a>
                </li>

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                    </li>
                }

                <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage + 1 })">Kế tiếp</a>
                </li>
            </ul>
        </nav>
    }
</div>

@* ============================================== *@
@* ================ Cancel Order Modal (HTML) ============ *@
@* ============================================== *@
<div class="modal-overlay" id="cancelOrderModal">
    <div class="modal-content">
        <h4>Xác nhận Hủy đơn hàng</h4>
        <p>Vui lòng nhập lý do bạn muốn hủy đơn hàng **#<span id="modalOrderId"></span>**:</p>
        <form id="cancelForm" asp-action="Cancel" asp-controller="Orders" method="post">
            <input type="hidden" name="id" id="modalOrderIdInput" value="" />
            <textarea name="reason" id="cancelReasonInput" placeholder="VD: Đổi ý, đặt nhầm, không cần nữa,..." required></textarea>
            <div class="modal-actions">
                <button type="button" class="btn-modal-cancel" id="btnCloseModal">Đóng</button>
                <button type="submit" class="btn-modal-confirm">Hủy Đơn Hàng</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- DOM Elements ---
            const modalOverlay = document.getElementById('cancelOrderModal');
            const btnClose = document.getElementById('btnCloseModal');
            // Lấy tất cả các nút Hủy có class 'btn-open-modal'
            const btnOpenList = document.querySelectorAll('.btn-open-modal');
            const modalOrderIdSpan = document.getElementById('modalOrderId');
            const modalOrderIdInput = document.getElementById('modalOrderIdInput');
            const cancelReasonInput = document.getElementById('cancelReasonInput');

            // --- Hàm Đóng Modal ---
            const closeModal = () => {
                modalOverlay.classList.remove('active');
                // Đảm bảo không còn focus vào input khi modal đóng
                cancelReasonInput.blur();
            };

            // --- Xử lý Mở Modal ---
            btnOpenList.forEach(button => {
                button.addEventListener('click', (e) => {
                    // Lấy Order ID từ data attribute của nút được click
                    const orderId = e.target.dataset.orderId;

                    // Cập nhật Order ID vào các phần tử hiển thị và input ẩn
                    modalOrderIdSpan.textContent = orderId;
                    modalOrderIdInput.value = orderId;

                    // Reset textarea và focus vào đó
                    cancelReasonInput.value = '';

                    // Hiển thị modal
                    modalOverlay.classList.add('active');
                    // Đợi animation mở modal hoàn thành rồi focus
                    setTimeout(() => {
                        cancelReasonInput.focus();
                    }, 300);
                });
            });

            // --- Xử lý Đóng Modal ---
            // 1. Đóng modal khi click nút "Đóng"
            btnClose.addEventListener('click', closeModal);

            // 2. Đóng modal khi click ra ngoài overlay
            modalOverlay.addEventListener('click', (e) => {
                if (e.target === modalOverlay) {
                    closeModal();
                }
            });

            // 3. Đóng modal khi nhấn ESC
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape' && modalOverlay.classList.contains('active')) {
                    closeModal();
                }
            });

            // --- Xử lý Form Submit (Ngăn submit nếu lý do rỗng, dù đã có required) ---
            const cancelForm = document.getElementById('cancelForm');
            cancelForm.addEventListener('submit', (e) => {
                if (!cancelReasonInput.value.trim()) {
                    e.preventDefault();
                    // Thông báo đơn giản cho người dùng
                    alert("Vui lòng nhập lý do hủy đơn hàng.");
                    cancelReasonInput.focus();
                }
            });
        });
    </script>
}